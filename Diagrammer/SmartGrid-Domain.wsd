@startuml table-domains

!include setup.iuml
_set class_circle
_applysetup


!define grid (T,#33CCCC) SmartGridInfo
!define prosumer (T,#00FF00) ProsumerInfo
!define trader (T,#0000FF) TraderInfo


package "Mini Smart Grid Dom√¶ne" <<Rectangle>> {



class Installation << grid >>
{
    InstllationsID : Guid
    InstallationsNr : int
    MaalerID : Guid
    MaalerNr : int
}

class Maalerstand << grid >>
{
    [PK] MaalerID : Guid
    Maalerstand: double
    MaalerstandForward : double
    TimeStamp : DateTime
}

class Adresse <<  grid >>
{
    AdresseID : Guid
    VejNavn : string
    VejNr : string
    By : Guid
}

class By << grid >>
{
    [PK] ByID : Guid
    ByNavn : string
    PostNr : string
    Land : string
}




class Prosumer << prosumer >>
{
    [ PK ] ProsumerID : Guid
    InstallationsID : Guid

}
note top: InstallationsID er fra tabellen <<SmartGridInfo>>
class Kontakt << prosumer >>
{
    [ PK ] KontaktID: Guid
    TelefonNr1 : int
    TelefonNr2 : int
    Emailadresse : string

}


class AktuelForbrug << prosumer >>
{
    [ PK ]AktuelForbrugID : Guid
    [ FK ]ProsumerID : Guid
    StandKWH : double
    AktuelTid : DateTime
}

class AktuelProduktion << prosumer >>
{
    [ PK ]AktuelProduktionID : Guid
    [ FK ]ProsumerID : Guid
    StandKWH : double
    AktuelTid : DateTIme
}
class ForventetForbrug << prosumer >>
{
    [ PK ] ForventetForbrugID : Guid
    [ FK ] ProsumerID : Guid
    RegistreretTidspunkt : DateTime
    14DageFrem : double
    1TimeFrem : double
    1MaanedFrem : double
    24TimerFrem : double
    1AarFrem : double
}
class ForventetProduktion << prosumer >>
{
    [ PK ] ForventetProduktionID : Guid
    [ FK ] ProsumerID : Guid
    RegistreretTidspunkt : DateTime
    14DageFrem : double
    1TimeFrem : double
    1MaanedFrem : double
    24TimerFrem : double
    1AarFrem : double
}

class Trades << trader >>
{   
    ProducerID : Guid
    ConsumerID: Guid
    StartPerioden: DateTime
    SlutPerioden: DateTime
    Produktion : double
}


class SmartGridLoad << trader >>
{
    SmartGridLoadID : Guid
    StartPerioden: DateTime
    SlutPerioden : DateTime
    TotalProduktionKWHIPerioden: double
    TotalForbrugKWHIPerioden: double
    ElvaerkProduktionIPerioden: double
    ElvaerkForbrugIPerioden: double
    ForventetForbrugIPerioen: double
}

class Produktion << trader >>
{
    [ PK ] TraderID : Guid
    ProsumerID : Guid
}

class Forbrug << trader >>
{
    [ PK ] TraderID : Guid
    ProsumerID : Guid
}


Prosumer "*" -right- "1" ForventetProduktion
Prosumer "*" -left- "1" ForventetForbrug
Prosumer "*" -down- "1" AktuelForbrug
Prosumer "*" -down- "1" AktuelProduktion
Prosumer "1" -up- "1" Kontakt
Adresse "1" -up- "*" Installation
By "1" -up- "*" Adresse
Maalerstand "1" -left- "1" Installation


    ' note left of component
    ' ""Add()"" is vulnerable to invalid 
    ' usage / runtime errors, which should 
    ' be handled in its implementations
    ' end note


    ' class "CompositeAttribute" as compattr
    ' class compattr {
    '     Children : List<IHtmlComponent>
    '     Name : string
    '     Value : string
    '     Serialize() : string
    ' }
    ' compattr -up-|> composite

    ' class "Element" as element
    ' class element {
    '     Children : List<IHtmlComponent>
    '     Tag : string
    '     Add(IHtmlComponent) : void
    '     Serialize() : string
    ' }
    ' element -right-|> composite

    ' class "VoidElement" as void
    ' class void {
    '     Children : List<IHtmlComponent>
    '     Tag : string
    '     Add(IHtmlComponent) : void
    '     Serialize() : string
    ' }
    ' void -up-|> composite

    ' class "TextComponent" as text
    ' class text {
    '     Children : List<IHtmlComponent>
    '     Content : string
    '     Add(IHtmlComponent) : void
    '     Serialize() : string
    ' }
    ' text -up-|> composite
    '     ' Leaf abstract class
    ' abstract "HtmlLeaf" as leaf
    ' abstract leaf _ABS {
    '     Add(IHtmlComponent) : void
    '     {abstract} Serialize() : string
    ' }
    ' leaf -up-|> component

    ' 'Leaves
    ' class "Attribute" as attr
    ' class attr {
    '     Name : string
    '     Value : string
    '     Serialize() : string
    ' }
    ' attr -up-|> leaf

    

    ' 'note as n
    ' 'Remove ""Add()"" from HtmlLeaf 
    ' 'and IHtmlComponent for more 
    ' 'typesafety but less access
    ' 'end note

    ' note bottom of element
    ' ""<div>...</div>"" 
    ' ""<p>...</p>"" 
    ' ""etc""
    ' end note

    ' note bottom of void
    ' ""<br />""
    ' ""<hr />""
    ' ""etc""
    ' end note

    ' note bottom of compattr 
    ' ""class=~"container col-md-6~" ""
    ' ""style=~"color:blue; text-align:center~" ""
    ' ""etc""
    ' end note

    ' note bottom of attr
    ' ""id=~"SomeElementID~" ""
    ' ""href=~"#~" ""
    ' ""etc""
    ' end note
    
    ' note right of leaf
    ' Implementation of ""Add()"" 
    ' throws exeption
    ' end note

    ' 'note bottom of cssdec 
    ' '""color:blue""
    ' '""text-align:center""
    ' 'end note

    ' 'note bottom of cssc
    ' '""container""
    ' '""col-md-6""
    ' 'end note


    ' 'interface "IAttribute" as iattr
    ' 'interface iattr _ABS {
    ' '    Serialize() : string
    ' '}
    ' 'iattr -up-|> component

}

@enduml